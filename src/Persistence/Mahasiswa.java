/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Persistence;

/**
 *
 * @author zahidahhanumalzahra
 */
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.lang.System.Logger;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.*;
import java.lang.System.Logger.Level;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import java.util.Map;
import java.util.HashMap;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import javax.persistence.PersistenceException;

public class Mahasiswa extends javax.swing.JFrame {

    Connection conn;

    public Mahasiswa() {
        initComponents();
        tampil();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableData = new javax.swing.JTable();
        jButtonTambahData = new javax.swing.JButton();
        jButtonHapusData = new javax.swing.JButton();
        jButtonUpdateData = new javax.swing.JButton();
        jTextFieldNama = new javax.swing.JTextField();
        jTextFieldNIM = new javax.swing.JTextField();
        jTextFieldAlamat = new javax.swing.JTextField();
        jLabelNIM = new javax.swing.JLabel();
        jLabelNama = new javax.swing.JLabel();
        jLabelAlamat = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabelAsalSMA = new javax.swing.JLabel();
        jTextFieldAsalSMA = new javax.swing.JTextField();
        jButtonCetak = new javax.swing.JButton();
        jButtonUpload = new javax.swing.JButton();
        jButtonLogout = new javax.swing.JButton();
        jLabelNamaOrtu = new javax.swing.JLabel();
        jTextFieldNamaOrtu = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableData);

        jButtonTambahData.setText("Tambah");
        jButtonTambahData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTambahDataActionPerformed(evt);
            }
        });

        jButtonHapusData.setText("Hapus");
        jButtonHapusData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusDataActionPerformed(evt);
            }
        });

        jButtonUpdateData.setText("Update");
        jButtonUpdateData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateDataActionPerformed(evt);
            }
        });

        jLabelNIM.setText("NIM");

        jLabelNama.setText("Nama");

        jLabelAlamat.setText("Alamat");

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel4.setText("Data Mahasiswa");

        jLabelAsalSMA.setText("Asal SMA");

        jTextFieldAsalSMA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAsalSMAActionPerformed(evt);
            }
        });

        jButtonCetak.setText("Cetak");
        jButtonCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCetakActionPerformed(evt);
            }
        });

        jButtonUpload.setText("Upload");
        jButtonUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUploadActionPerformed(evt);
            }
        });

        jButtonLogout.setText("Logout");
        jButtonLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLogoutActionPerformed(evt);
            }
        });

        jLabelNamaOrtu.setText("Nama Orang Tua");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonLogout))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabelNIM)
                                            .addComponent(jLabelNama)
                                            .addComponent(jLabelAlamat)
                                            .addComponent(jLabelAsalSMA)
                                            .addComponent(jLabelNamaOrtu))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldNama, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                                            .addComponent(jTextFieldNIM)
                                            .addComponent(jTextFieldAlamat)
                                            .addComponent(jTextFieldAsalSMA)
                                            .addComponent(jTextFieldNamaOrtu))
                                        .addGap(18, 18, 18))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(58, 58, 58)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonTambahData)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButtonUpdateData)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonHapusData))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addComponent(jButtonCetak)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButtonUpload)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelNIM)
                            .addComponent(jTextFieldNIM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelNama)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelAlamat)
                                    .addComponent(jTextFieldAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelAsalSMA, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldAsalSMA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jTextFieldNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelNamaOrtu)
                            .addComponent(jTextFieldNamaOrtu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonTambahData)
                            .addComponent(jButtonUpdateData)
                            .addComponent(jButtonHapusData))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonCetak)
                            .addComponent(jButtonUpload))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonLogout)
                        .addGap(35, 35, 35))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void tampil() {
        EntityManager em = Persistence.createEntityManagerFactory("UAS_PBOPU").createEntityManager();

        Query q = em.createNamedQuery("Datamhs.findAll");
        List<Datamhs> hasil = q.getResultList();

        // Model tabel baru dengan kolom yang sesuai
        DefaultTableModel tbmk = new DefaultTableModel(
                new String[]{"NIM", "Nama", "Alamat", "Asal SMA", "Nama Ortu"}, 0);

        for (Datamhs data : hasil) {
            Object[] baris = new Object[5];
            baris[0] = data.getNim();
            baris[1] = data.getNama();
            baris[2] = data.getAlamat();
            baris[3] = data.getAsal();
            baris[4] = data.getNamaortu();
            tbmk.addRow(baris);
        }

        jTableData.setModel(tbmk);

        em.close();
    }

    public void kosong() {
        jTextFieldNIM.setText("");
        jTextFieldNama.setText("");
        jTextFieldAlamat.setText("");
        jTextFieldAsalSMA.setText("");
        jTextFieldNamaOrtu.setText("");
    }


    private void jButtonHapusDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusDataActionPerformed

        int selectedRow = jTableData.getSelectedRow();

        if (selectedRow != -1) {

            String nimString = jTableData.getValueAt(selectedRow, 0).toString();
            int nim = Integer.parseInt(nimString);

            int jawab = JOptionPane.showConfirmDialog(null, "Yakin ingin menghapus data?",
                    "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);

            if (jawab == JOptionPane.YES_OPTION) {
                EntityManagerFactory emf = Persistence.createEntityManagerFactory("UAS_PBOPU");
                EntityManager em = emf.createEntityManager();
                em.getTransaction().begin();

                Datamhs mhs = em.find(Datamhs.class, nim);
                if (mhs != null) {
                    em.remove(mhs);
                    em.getTransaction().commit();
                    JOptionPane.showMessageDialog(null, "Data berhasil dihapus");
                } else {
                    JOptionPane.showMessageDialog(null, "Data tidak ditemukan");
                }

                em.close();
                emf.close();

                tampil();
            } else {
                JOptionPane.showMessageDialog(this, "Penghapusan dibatalkan");
            }
        }


    }//GEN-LAST:event_jButtonHapusDataActionPerformed

    private void jButtonTambahDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTambahDataActionPerformed

    if (jTextFieldNIM.getText().equals("") || jTextFieldNama.getText().equals("") || jTextFieldAlamat.getText().equals("") || jTextFieldAsalSMA.getText().equals("") || jTextFieldNamaOrtu.getText().equals("")) {
        JOptionPane.showMessageDialog(null, "Isi semua data");
    } else {
        String nim, nama, alamat, asalSMA, namaOrtu;
        nim = jTextFieldNIM.getText();
        alamat = jTextFieldAlamat.getText();
        nama = jTextFieldNama.getText();
        asalSMA = jTextFieldAsalSMA.getText();
        namaOrtu = jTextFieldNamaOrtu.getText();

        // Menghilangkan bagian validasi untuk SKS

        // Menyiapkan EntityManager untuk interaksi dengan database
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("UAS_PBOPU");
        EntityManager em = emf.createEntityManager();
        em.getTransaction().begin();

        // Membuat objek Datamhs dan mengisi data
        Datamhs mhs = new Datamhs();
        mhs.setNim(Integer.parseInt(nim)); 
        mhs.setNama(nama);
        mhs.setAlamat(alamat); 
        mhs.setAsal(asalSMA);
        mhs.setNamaortu(namaOrtu); 

        // Menyimpan objek Datamhs ke database
        em.persist(mhs);

        // Commit transaksi dan menampilkan pesan sukses
        em.getTransaction().commit();
        JOptionPane.showMessageDialog(null, "Sukses diinput");

        // Mengosongkan form input dan menampilkan data terbaru
        kosong(); 
        tampil(); 

        // Menutup EntityManager
        em.close();
        emf.close();
    }

    }//GEN-LAST:event_jButtonTambahDataActionPerformed

    private void jButtonUpdateDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateDataActionPerformed

        if (jTextFieldNIM.getText().equals("") || jTextFieldAlamat.getText().equals("") || jTextFieldNama.getText().equals("") || jTextFieldAsalSMA.getText().equals("") || jTextFieldNamaOrtu.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Isi semua data");
        } else {
            // Ambil nilai dari form
            String nim = jTextFieldNIM.getText();
            String alamat = jTextFieldAlamat.getText();
            String nama = jTextFieldNama.getText();
            String asalSMA = jTextFieldAsalSMA.getText();
            String namaOrtu = jTextFieldNamaOrtu.getText();
            int sks;

            try {
                // Coba parsing nilai SKS ke integer
                sks = Integer.parseInt(jTextFieldNama.getText()); // Mengambil nilai SKS dari jTextFieldNama
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "SKS harus berupa angka", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Buat EntityManager untuk mengakses database
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("UAS_PBOPU");
            EntityManager em = emf.createEntityManager();
            em.getTransaction().begin();

        
            Datamhs mhs = em.find(Datamhs.class, Integer.parseInt(nim));
            if (mhs == null) {
                JOptionPane.showMessageDialog(null, "Data tidak ditemukan");
            } else {
                // Update data
                mhs.setNim(Integer.parseInt(nim)); 
            mhs.setNama(nama);
            mhs.setAlamat(alamat); 
            mhs.setAsal(asalSMA);
            mhs.setNamaortu(namaOrtu); 
    

                em.merge(mhs); // Menyimpan perubahan data
                em.getTransaction().commit();

                JOptionPane.showMessageDialog(null, "Data berhasil diupdate");

                em.close();
                emf.close();

                kosong(); // Mengosongkan form
                jTextFieldNIM.setEditable(true); // Mengaktifkan kembali kolom NIM untuk editing
            }
        }

        tampil(); // Menampilkan data yang sudah diupdate


    }//GEN-LAST:event_jButtonUpdateDataActionPerformed

    private void jTextFieldAsalSMAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAsalSMAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAsalSMAActionPerformed

    private void jButtonCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCetakActionPerformed
     try {
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("UAS_PBOPU");
            EntityManager em = emf.createEntityManager();

            if (em == null) {
                JOptionPane.showMessageDialog(null, "EntityManager gagal dibuat");
                return;
            }

            String query = "SELECT m FROM Datamhs m";
            List<Datamhs> datamhsList = em.createQuery(query, Datamhs.class).getResultList();

            if (datamhsList.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Data tidak ditemukan");
                return;
            }

            Map<String, Object> parameters = new HashMap<>();
            parameters.put("dataList", datamhsList);

            String path = "src/KartuRencanaStudi.jasper";
            JasperReport report = (JasperReport) JRLoader.loadObjectFromFile(path);

            JasperPrint print = JasperFillManager.fillReport(report, parameters, new JRBeanCollectionDataSource(datamhsList));

            JasperViewer viewer = new JasperViewer(print, false);
            viewer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            viewer.setVisible(true);

            em.close();
            emf.close();

        } catch (JRException | PersistenceException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat mencetak laporan: " + e.getMessage());
        }                         
    }//GEN-LAST:event_jButtonCetakActionPerformed

    private void jButtonUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUploadActionPerformed
 
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        int returnValue = jfc.showOpenDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File filePilihan = jfc.getSelectedFile();
            System.out.println("File yang dipilih: " + filePilihan.getAbsolutePath());

            EntityManagerFactory emf = Persistence.createEntityManagerFactory("UAS_PBOPU");
            EntityManager em = emf.createEntityManager();

            try (BufferedReader br = new BufferedReader(new FileReader(filePilihan))) {
                String baris;
                String pemisah = ";";  // Sesuaikan dengan format pemisah dalam file (misalnya CSV dengan titik koma)

                // Membaca setiap baris dalam file
                while ((baris = br.readLine()) != null) {
                    String[] data = baris.split(pemisah);

                    // Pastikan ada cukup data dalam setiap baris
                    if (data.length < 5) {
                        JOptionPane.showMessageDialog(null, "Data tidak lengkap dalam file. Pastikan setiap baris memiliki 5 kolom.");
                        continue;
                    }

                    // Mengambil nilai dari file dan memvalidasi
                    String nim = data[0].trim();
                    String nama = data[1].trim();
                    String alamat = data[2].trim();
                    String asal = data[3].trim();
                    String namaOrtu = data[4].trim();

                    // Memastikan data nim dan nama tidak kosong
                    if (nim.isEmpty() || nama.isEmpty() || alamat.isEmpty() || asal.isEmpty() || namaOrtu.isEmpty()) {
                        JOptionPane.showMessageDialog(null, "Gagal diinput: Semua kolom harus diisi");
                        continue;
                    }

                    // Memulai transaksi untuk menyimpan data ke database
                    em.getTransaction().begin();

                    // Membuat objek Datamhs dan mengisi data
                    Datamhs mk = new Datamhs();
                    mk.setNim(Integer.parseInt(nim));  
                    mk.setNama(nama);               
                    mk.setAlamat(alamat);              
                    mk.setAsal(asal);   
                    mk.setNamaortu(namaOrtu);     

                    // Menyimpan entitas ke database
                    em.persist(mk);
                    em.getTransaction().commit();

                    JOptionPane.showMessageDialog(null, "Data berhasil diinput: " + nim + " - " + nama);
                    tampil();  // Memperbarui tampilan data setelah input berhasil
                }
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "File tidak ditemukan: " + ex.getMessage());
                ex.printStackTrace();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Gagal membaca file: " + ex.getMessage());
                ex.printStackTrace();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + ex.getMessage());
                ex.printStackTrace();
            } finally {
                // Menutup EntityManager
                em.close();
                emf.close();
            }
        
    

}


    }//GEN-LAST:event_jButtonUploadActionPerformed

    private void jButtonLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLogoutActionPerformed

        this.dispose();
        Login loginFrame = new Login();
        loginFrame.setVisible(true);
    }//GEN-LAST:event_jButtonLogoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

}
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mahasiswa.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);

} catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mahasiswa.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);

} catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mahasiswa.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);

} catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mahasiswa.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mahasiswa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCetak;
    private javax.swing.JButton jButtonHapusData;
    private javax.swing.JButton jButtonLogout;
    private javax.swing.JButton jButtonTambahData;
    private javax.swing.JButton jButtonUpdateData;
    private javax.swing.JButton jButtonUpload;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelAlamat;
    private javax.swing.JLabel jLabelAsalSMA;
    private javax.swing.JLabel jLabelNIM;
    private javax.swing.JLabel jLabelNama;
    private javax.swing.JLabel jLabelNamaOrtu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableData;
    private javax.swing.JTextField jTextFieldAlamat;
    private javax.swing.JTextField jTextFieldAsalSMA;
    private javax.swing.JTextField jTextFieldNIM;
    private javax.swing.JTextField jTextFieldNama;
    private javax.swing.JTextField jTextFieldNamaOrtu;
    // End of variables declaration//GEN-END:variables
}
